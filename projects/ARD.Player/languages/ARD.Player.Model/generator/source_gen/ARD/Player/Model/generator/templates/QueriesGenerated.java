package ARD.Player.Model.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static Object propertyMacro_GetValue_3_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.path$te6U);
  }
  public static Object propertyMacro_GetValue_3_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_4_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.plugin$pktk) + "@" + SPropertyOperations.getEnum(_context.getNode(), PROPS.platform$pe_V);
  }
  public static SNode sourceNodeQuery_1_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.baseUrl$HcLQ);
  }
  public static SNode sourceNodeQuery_1_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.allowAutoplay$HdfS);
  }
  public static SNode sourceNodeQuery_2_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isTimeRemainingDisplay$2Num);
  }
  public static SNode sourceNodeQuery_2_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isShowSubtitleAtStart$2NWo);
  }
  public static SNode sourceNodeQuery_2_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isAutoplay$2T$K);
  }
  public static SNode sourceNodeQuery_2_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isMuted$2UwO);
  }
  public static SNode sourceNodeQuery_2_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isDvrEnabled$30Be);
  }
  public static SNode sourceNodeQuery_3_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.generic$tjJi);
  }
  public static SNode sourceNodeQuery_3_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.web$tl9o);
  }
  public static SNode sourceNodeQuery_3_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.android$vNwV);
  }
  public static SNode sourceNodeQuery_3_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.iOS$vOG0);
  }
  public static SNode sourceNodeQuery_4_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.config$pf3X);
  }
  public static SNode sourceNodeQuery_5_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.baseUrl$fjSN);
  }
  public static SNode sourceNodeQuery_5_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isForcedAutoplay$fpia);
  }
  public static SNode sourceNodeQuery_5_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.enablePostMessage$fpZd);
  }
  public static SNode sourceNodeQuery_5_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.enableMaturityLogin$fqVh);
  }
  public static SNode sourceNodeQuery_5_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.disablePosterImage$hTKQ);
  }
  public static SNode sourceNodeQuery_5_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.enableBackButton$hVaW);
  }
  public static SNode sourceNodeQuery_5_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.disableBackButtonTitle$i1Jo);
  }
  public static SNode sourceNodeQuery_5_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isAudioSticky$i8yP);
  }
  public static SNode sourceNodeQuery_5_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.isForcedVideoView$if_j);
  }
  public static Iterable<SNode> sourceNodesQuery_3_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.plugin$vUMq);
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("2815143099423912618", new SNQ(i++));
    snqMethods.put("2815143099423912922", new SNQ(i++));
    snqMethods.put("2815143099423913517", new SNQ(i++));
    snqMethods.put("2815143099423913820", new SNQ(i++));
    snqMethods.put("2815143099423913894", new SNQ(i++));
    snqMethods.put("2815143099423913968", new SNQ(i++));
    snqMethods.put("2815143099423914042", new SNQ(i++));
    snqMethods.put("2815143099423917872", new SNQ(i++));
    snqMethods.put("2815143099423918545", new SNQ(i++));
    snqMethods.put("2815143099423918628", new SNQ(i++));
    snqMethods.put("2815143099423918707", new SNQ(i++));
    snqMethods.put("2815143099423937836", new SNQ(i++));
    snqMethods.put("2815143099423942460", new SNQ(i++));
    snqMethods.put("2815143099423942760", new SNQ(i++));
    snqMethods.put("2815143099423942839", new SNQ(i++));
    snqMethods.put("2815143099423942910", new SNQ(i++));
    snqMethods.put("2815143099423942981", new SNQ(i++));
    snqMethods.put("2815143099423943052", new SNQ(i++));
    snqMethods.put("2815143099423943123", new SNQ(i++));
    snqMethods.put("2815143099423943194", new SNQ(i++));
    snqMethods.put("2815143099423943265", new SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    SourceNodeQuery query = identity.forFunctionNode(snqMethods);
    return (query != null ? query : super.getSourceNodeQuery(identity));
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_1_0(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_1_1(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_2_0(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_2_1(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_2_2(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_2_3(ctx);
        case 6:
          return QueriesGenerated.sourceNodeQuery_2_4(ctx);
        case 7:
          return QueriesGenerated.sourceNodeQuery_3_0(ctx);
        case 8:
          return QueriesGenerated.sourceNodeQuery_3_1(ctx);
        case 9:
          return QueriesGenerated.sourceNodeQuery_3_2(ctx);
        case 10:
          return QueriesGenerated.sourceNodeQuery_3_3(ctx);
        case 11:
          return QueriesGenerated.sourceNodeQuery_4_0(ctx);
        case 12:
          return QueriesGenerated.sourceNodeQuery_5_0(ctx);
        case 13:
          return QueriesGenerated.sourceNodeQuery_5_1(ctx);
        case 14:
          return QueriesGenerated.sourceNodeQuery_5_2(ctx);
        case 15:
          return QueriesGenerated.sourceNodeQuery_5_3(ctx);
        case 16:
          return QueriesGenerated.sourceNodeQuery_5_4(ctx);
        case 17:
          return QueriesGenerated.sourceNodeQuery_5_5(ctx);
        case 18:
          return QueriesGenerated.sourceNodeQuery_5_6(ctx);
        case 19:
          return QueriesGenerated.sourceNodeQuery_5_7(ctx);
        case 20:
          return QueriesGenerated.sourceNodeQuery_5_8(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("2815143099423918780", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_3_0(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("2815143099423916361", new PVQ(i++, MetaAdapterFactory.getProperty(0x22472c372c634f45L, 0xa6417ea7483e57ebL, 0x271165bbd10c3884L, 0x515a2af4d35905dL, "path"), "path"));
    pvqMethods.put("2815143099423917651", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "name"));
    pvqMethods.put("2815143099423919514", new PVQ(i++, MetaAdapterFactory.getProperty(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695f0L, 0x515a2af4d2695f7L, "key"), "plugin@platform"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_3_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_3_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_4_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty path$te6U = MetaAdapterFactory.getProperty(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cc22cL, 0x515a2af4d358e1dL, "path");
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty platform$pe_V = MetaAdapterFactory.getProperty(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbab4L, 0x515a2af4d358e4cL, "platform");
    /*package*/ static final SProperty plugin$pktk = MetaAdapterFactory.getProperty(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbab4L, 0x515a2af4d358e50L, "plugin");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink baseUrl$HcLQ = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba3eL, 0x271165bbd10170f6L, "baseUrl");
    /*package*/ static final SContainmentLink allowAutoplay$HdfS = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba3eL, 0x271165bbd10170f8L, "allowAutoplay");
    /*package*/ static final SContainmentLink isTimeRemainingDisplay$2Num = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba8aL, 0x271165bbd1016146L, "isTimeRemainingDisplay");
    /*package*/ static final SContainmentLink isShowSubtitleAtStart$2NWo = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba8aL, 0x271165bbd1016148L, "isShowSubtitleAtStart");
    /*package*/ static final SContainmentLink isAutoplay$2T$K = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba8aL, 0x271165bbd101614bL, "isAutoplay");
    /*package*/ static final SContainmentLink isMuted$2UwO = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba8aL, 0x271165bbd101614fL, "isMuted");
    /*package*/ static final SContainmentLink isDvrEnabled$30Be = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cba8aL, 0x271165bbd1016154L, "isDvrEnabled");
    /*package*/ static final SContainmentLink generic$tjJi = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cc22cL, 0x515a2af4d358e20L, "generic");
    /*package*/ static final SContainmentLink web$tl9o = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cc22cL, 0x515a2af4d358e26L, "web");
    /*package*/ static final SContainmentLink android$vNwV = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cc22cL, 0x515a2af4d358e29L, "android");
    /*package*/ static final SContainmentLink iOS$vOG0 = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cc22cL, 0x515a2af4d358e2eL, "iOS");
    /*package*/ static final SContainmentLink config$pf3X = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbab4L, 0x515a2af4d358e4eL, "config");
    /*package*/ static final SContainmentLink baseUrl$fjSN = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbad4L, "baseUrl");
    /*package*/ static final SContainmentLink isForcedAutoplay$fpia = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbad6L, "isForcedAutoplay");
    /*package*/ static final SContainmentLink enablePostMessage$fpZd = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbad9L, "enablePostMessage");
    /*package*/ static final SContainmentLink enableMaturityLogin$fqVh = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbaddL, "enableMaturityLogin");
    /*package*/ static final SContainmentLink disablePosterImage$hTKQ = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbae2L, "disablePosterImage");
    /*package*/ static final SContainmentLink enableBackButton$hVaW = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbae8L, "enableBackButton");
    /*package*/ static final SContainmentLink disableBackButtonTitle$i1Jo = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbaefL, "disableBackButtonTitle");
    /*package*/ static final SContainmentLink isAudioSticky$i8yP = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbaf7L, "isAudioSticky");
    /*package*/ static final SContainmentLink isForcedVideoView$if_j = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cbad1L, 0x271165bbd10cbb00L, "isForcedVideoView");
    /*package*/ static final SContainmentLink plugin$vUMq = MetaAdapterFactory.getContainmentLink(0xc08689bf220f44e0L, 0xb1176fee592c62ccL, 0x271165bbd10cc22cL, 0x515a2af4d358e33L, "plugin");
  }
}
