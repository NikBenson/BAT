package ARD.Player.Model.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationBase;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.ApplySink;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import java.util.Collection;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import java.util.Collections;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.runtime.MetaObjectContainer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.SNodePointer;

@Generated
public class Template_map_PlayerConfig extends TemplateDeclarationBase {

  public Template_map_PlayerConfig() {
    super(new MO());
  }

  public SNodeReference getTemplateNode() {
    return template;
  }

  @Override
  public void apply(TemplateContext context, ApplySink sink) throws GenerationException {
    final TemplateExecutionEnvironment environment = context.getEnvironment();
    Collection<SNode> tlist1 = null;
    TemplateContext context1 = context.subContext("PlayerConfig2JSON");
    final SNode tnode2 = environment.createOutputNode(myConcepts[0]);
    {
      environment.nodeCopied(context1, tnode2, "tpl/r:06cdd5b9-ab92-4965-9423-c07eea1d6828/7064017023678163757");
      SNodeAccessUtil.setPropertyValue(tnode2, myProperties[0], QueriesGenerated.propertyMacro_GetValue_5_0(new PropertyMacroContext(context1, "map_PlayerConfig", propertyMacro)));
      SNodeAccessUtil.setPropertyValue(tnode2, myProperties[1], QueriesGenerated.propertyMacro_GetValue_5_1(new PropertyMacroContext(context1, "path", propertyMacro1)));
      TemplateContext context2 = context1.subContext();
      {
        final SNode tnode3 = environment.createOutputNode(myConcepts[1]);
        {
          TemplateContext context3 = context2.subContext();
          {
            Collection<SNode> tlist4 = Collections.emptyList();
            if (QueriesGenerated.ifMacro_Condition_5_0(new IfMacroContext(context3, ifMacroRef))) {
              final SNode tnode5 = environment.createOutputNode(myConcepts[2]);
              {
                tnode5.setProperty(myProperties[2], "generic");
                TemplateContext context4 = context3.subContext();
                {
                  Collection<SNode> tlist6 = null;
                  final SNode copySrcInput6 = QueriesGenerated.sourceNodeQuery_5_0(new SourceSubstituteMacroNodeContext(context4, copySrcMacro));
                  tlist6 = environment.copyNodes(TemplateUtil.singletonList(copySrcInput6), copySrcMacro, "tpl/r:06cdd5b9-ab92-4965-9423-c07eea1d6828/7064017023678165989", context4);
                  environment.aggregate(tnode5, myAggregationLinks[0], tlist6);
                }
              }
              tlist4 = TemplateUtil.singletonList(tnode5);
            }
            environment.aggregate(tnode3, myAggregationLinks[1], tlist4);
          }
          {
            Collection<SNode> tlist7 = Collections.emptyList();
            if (QueriesGenerated.ifMacro_Condition_5_1(new IfMacroContext(context3, ifMacroRef1))) {
              final SNode tnode8 = environment.createOutputNode(myConcepts[2]);
              {
                tnode8.setProperty(myProperties[2], "web");
                TemplateContext context5 = context3.subContext();
                {
                  Collection<SNode> tlist9 = null;
                  final SNode copySrcInput9 = QueriesGenerated.sourceNodeQuery_5_1(new SourceSubstituteMacroNodeContext(context5, copySrcMacro1));
                  tlist9 = environment.copyNodes(TemplateUtil.singletonList(copySrcInput9), copySrcMacro1, "tpl/r:06cdd5b9-ab92-4965-9423-c07eea1d6828/7064017023678165998", context5);
                  environment.aggregate(tnode8, myAggregationLinks[0], tlist9);
                }
              }
              tlist7 = TemplateUtil.singletonList(tnode8);
            }
            environment.aggregate(tnode3, myAggregationLinks[1], tlist7);
          }
          {
            Collection<SNode> tlist10 = Collections.emptyList();
            if (QueriesGenerated.ifMacro_Condition_5_2(new IfMacroContext(context3, ifMacroRef2))) {
              final SNode tnode11 = environment.createOutputNode(myConcepts[2]);
              {
                tnode11.setProperty(myProperties[2], "android");
                TemplateContext context6 = context3.subContext();
                {
                  Collection<SNode> tlist12 = null;
                  final SNode copySrcInput12 = QueriesGenerated.sourceNodeQuery_5_2(new SourceSubstituteMacroNodeContext(context6, copySrcMacro2));
                  tlist12 = environment.copyNodes(TemplateUtil.singletonList(copySrcInput12), copySrcMacro2, "tpl/r:06cdd5b9-ab92-4965-9423-c07eea1d6828/7064017023678166007", context6);
                  environment.aggregate(tnode11, myAggregationLinks[0], tlist12);
                }
              }
              tlist10 = TemplateUtil.singletonList(tnode11);
            }
            environment.aggregate(tnode3, myAggregationLinks[1], tlist10);
          }
          {
            Collection<SNode> tlist13 = Collections.emptyList();
            if (QueriesGenerated.ifMacro_Condition_5_3(new IfMacroContext(context3, ifMacroRef3))) {
              final SNode tnode14 = environment.createOutputNode(myConcepts[2]);
              {
                tnode14.setProperty(myProperties[2], "ios");
                TemplateContext context7 = context3.subContext();
                {
                  Collection<SNode> tlist15 = null;
                  final SNode copySrcInput15 = QueriesGenerated.sourceNodeQuery_5_3(new SourceSubstituteMacroNodeContext(context7, copySrcMacro3));
                  tlist15 = environment.copyNodes(TemplateUtil.singletonList(copySrcInput15), copySrcMacro3, "tpl/r:06cdd5b9-ab92-4965-9423-c07eea1d6828/7064017023678166016", context7);
                  environment.aggregate(tnode14, myAggregationLinks[0], tlist15);
                }
              }
              tlist13 = TemplateUtil.singletonList(tnode14);
            }
            environment.aggregate(tnode3, myAggregationLinks[1], tlist13);
          }
          {
            final SNode tnode16 = environment.createOutputNode(myConcepts[2]);
            {
              tnode16.setProperty(myProperties[2], "pluginData");
              TemplateContext context8 = context3.subContext();
              {
                final SNode tnode17 = environment.createOutputNode(myConcepts[1]);
                {
                  TemplateContext context9 = context8.subContext();
                  {
                    Collection<SNode> tlist18 = null;
                    final Iterable<SNode> copyListInput18 = QueriesGenerated.sourceNodesQuery_5_0(new SourceSubstituteMacroNodesContext(context9, copySrcListMacro));
                    tlist18 = environment.copyNodes(copyListInput18, copySrcListMacro, "tpl/r:06cdd5b9-ab92-4965-9423-c07eea1d6828/7064017023678166026", context9);
                    environment.aggregate(tnode17, myAggregationLinks[1], tlist18);
                  }
                }
                environment.aggregate(tnode16, myAggregationLinks[0], tnode17);
              }
            }
            environment.aggregate(tnode3, myAggregationLinks[1], tnode16);
          }
        }
        environment.aggregate(tnode2, myAggregationLinks[2], tnode3);
      }
    }
    tlist1 = TemplateUtil.singletonList(tnode2);
    environment.registerLabel(context.getInput(), tlist1, "PlayerConfig2JSON");
    sink.add(null, tlist1);
  }

  /*package*/ static final class MO implements MetaObjectContainer {
    @Override
    public SConcept[] concepts() {
      SConcept[] rv = new SConcept[3];
      rv[0] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x22472c372c634f45L, 0xa6417ea7483e57ebL, "json.file"), 0x271165bbd10c3884L, "JSONFile");
      rv[1] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, "json.model"), 0x515a2af4d2695b7L, "JSONObject");
      rv[2] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, "json.model"), 0x515a2af4d2695f0L, "JSONObjectEntry");
      return rv;
    }

    @Override
    public SProperty[] properties() {
      SProperty[] rv = new SProperty[3];
      rv[0] = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
      rv[1] = MetaAdapterFactory.getProperty(0x22472c372c634f45L, 0xa6417ea7483e57ebL, 0x271165bbd10c3884L, 0x515a2af4d35905dL, "path");
      rv[2] = MetaAdapterFactory.getProperty(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695f0L, 0x515a2af4d2695f7L, "key");
      return rv;
    }


    @Override
    public SContainmentLink[] aggregations() {
      SContainmentLink[] rv = new SContainmentLink[3];
      rv[0] = MetaAdapterFactory.getContainmentLink(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695f0L, 0x515a2af4d2695fbL, "value");
      rv[1] = MetaAdapterFactory.getContainmentLink(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695b7L, 0x515a2af4d2695fdL, "value");
      rv[2] = MetaAdapterFactory.getContainmentLink(0x22472c372c634f45L, 0xa6417ea7483e57ebL, 0x271165bbd10c3884L, 0x515a2af4d359044L, "contents");
      return rv;
    }
  }
  private static final SNodePointer template = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678163757");
  private static final SNodePointer propertyMacro = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678168918");
  private static final SNodePointer propertyMacro1 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678170410");
  private static final SNodePointer copySrcMacro = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678165990");
  private static final SNodePointer ifMacroRef = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "473053312753217123");
  private static final SNodePointer copySrcMacro1 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678165999");
  private static final SNodePointer ifMacroRef1 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "473053312753226758");
  private static final SNodePointer copySrcMacro2 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678166008");
  private static final SNodePointer ifMacroRef2 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "473053312753231207");
  private static final SNodePointer copySrcMacro3 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678166017");
  private static final SNodePointer ifMacroRef3 = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "473053312753237407");
  private static final SNodePointer copySrcListMacro = new SNodePointer("r:06cdd5b9-ab92-4965-9423-c07eea1d6828(ARD.Player.Model.generator.templates@generator)", "7064017023678166028");
}
