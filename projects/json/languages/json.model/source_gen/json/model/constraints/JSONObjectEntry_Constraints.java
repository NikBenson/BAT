package json.model.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeChild;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class JSONObjectEntry_Constraints extends BaseConstraintsDescriptor {
  public JSONObjectEntry_Constraints() {
    super(CONCEPTS.JSONObjectEntry$6Y);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeChild, Boolean> calculateCanBeChildConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeChild, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeChild context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAChild(context.getNode(), context.getParentNode(), context.getConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
        }

        return result;
      }
    };
  }
  public static class Key_Property extends BasePropertyConstraintsDescriptor {
    public Key_Property(ConstraintsDescriptor container) {
      super(PROPS.key$bz7E, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castString(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:ad6c01ea-ef72-4b76-8a9c-0f9c9fa4ea93(json.model.constraints)", "473053312758191493"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, final String propertyValue) {
      return SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), CONCEPTS.JSONObject$N0) && ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(node), CONCEPTS.JSONObject$N0), LINKS.value$bz97)).where((it) -> propertyValue.equals(SPropertyOperations.getString(it, PROPS.key$bz7E))).count() <= 1;
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.key$bz7E, new Key_Property(this));
    return properties;
  }
  private static boolean staticCanBeAChild(SNode node, SNode parentNode, SAbstractConcept childConcept, SContainmentLink link) {
    return SNodeOperations.isInstanceOf(parentNode, CONCEPTS.JSONObject$N0);
  }
  private static final SNodePointer canBeChildBreakingPoint = new SNodePointer("r:ad6c01ea-ef72-4b76-8a9c-0f9c9fa4ea93(json.model.constraints)", "473053312754379160");

  private static final class CONCEPTS {
    /*package*/ static final SConcept JSONObjectEntry$6Y = MetaAdapterFactory.getConcept(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695f0L, "json.model.structure.JSONObjectEntry");
    /*package*/ static final SConcept JSONObject$N0 = MetaAdapterFactory.getConcept(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695b7L, "json.model.structure.JSONObject");
  }

  private static final class PROPS {
    /*package*/ static final SProperty key$bz7E = MetaAdapterFactory.getProperty(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695f0L, 0x515a2af4d2695f7L, "key");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink value$bz97 = MetaAdapterFactory.getContainmentLink(0xbbf76c73c6c840c0L, 0xab7b9998034e6ff8L, 0x515a2af4d2695b7L, 0x515a2af4d2695fdL, "value");
  }
}
