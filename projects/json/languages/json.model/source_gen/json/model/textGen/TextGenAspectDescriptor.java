package json.model.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import json.model.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.JSONArray:
        return new JSONArray_TextGen();
      case LanguageConceptSwitch.JSONBoolean:
        return new JSONBoolean_TextGen();
      case LanguageConceptSwitch.JSONDouble:
        return new JSONDouble_TextGen();
      case LanguageConceptSwitch.JSONInteger:
        return new JSONInteger_TextGen();
      case LanguageConceptSwitch.JSONNullValue:
        return new JSONNullValue_TextGen();
      case LanguageConceptSwitch.JSONObject:
        return new JSONObject_TextGen();
      case LanguageConceptSwitch.JSONObjectEntry:
        return new JSONObjectEntry_TextGen();
      case LanguageConceptSwitch.JSONString:
        return new JSONString_TextGen();
    }
    return null;
  }

}
