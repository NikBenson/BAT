package DesignSystem.System.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractDesignSystemPropertyConcept = 0;
  public static final int BaseDesignSystemParentConcept = 1;
  public static final int DesignSystemColorTypeConcept = 2;
  public static final int DesignSystemConcept = 3;
  public static final int DesignSystemEnumItemConcept = 4;
  public static final int DesignSystemEnumTypeConcept = 5;
  public static final int DesignSystemFileConcept = 6;
  public static final int DesignSystemParentConcept = 7;
  public static final int DesignSystemPrimitiveTypeConcept = 8;
  public static final int DesignSystemPropertiesListConcept = 9;
  public static final int DesignSystemPropertyConcept = 10;
  public static final int DesignSystemPropertyParameterConcept = 11;
  public static final int DesignSystemPropertyParametersListConcept = 12;
  public static final int DesignSystemReferenceTypeConcept = 13;
  public static final int DesignSystemSetTypeConcept = 14;
  public static final int DesignSystemStringTypeConcept = 15;
  public static final int DesignSystemSubsystemListConcept = 16;
  public static final int DesignSystemTypeConcept = 17;
  public static final int DirectReferenceDesignSystemParentConcept = 18;
  public static final int IDesignSystemCreatesType = 19;
  public static final int IndirectReferenceDesignSystemParentConcept = 20;
  public static final int ParametizedDesignSystemPropertyConcept = 21;
  public static final int ReferenceDesignSystemParentConcept = 22;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x43e160c7168c4805L, 0x904bc45c336610e7L);
    builder.put(0x6909f7b4b97586bL, AbstractDesignSystemPropertyConcept);
    builder.put(0x6909f7b4b720507L, BaseDesignSystemParentConcept);
    builder.put(0x6909f7b4b9a0478L, DesignSystemColorTypeConcept);
    builder.put(0x6909f7b4b5e14e7L, DesignSystemConcept);
    builder.put(0x6909f7b4b95b8c3L, DesignSystemEnumItemConcept);
    builder.put(0x6909f7b4b95b8c0L, DesignSystemEnumTypeConcept);
    builder.put(0x6909f7b4b918fd1L, DesignSystemFileConcept);
    builder.put(0x6909f7b4b720450L, DesignSystemParentConcept);
    builder.put(0x6909f7b4b98a809L, DesignSystemPrimitiveTypeConcept);
    builder.put(0x6909f7b4b5e14f2L, DesignSystemPropertiesListConcept);
    builder.put(0x6909f7b4b5e1504L, DesignSystemPropertyConcept);
    builder.put(0x6909f7b4b5e1538L, DesignSystemPropertyParameterConcept);
    builder.put(0x6909f7b4b5e152aL, DesignSystemPropertyParametersListConcept);
    builder.put(0x6909f7b4b98a806L, DesignSystemReferenceTypeConcept);
    builder.put(0x6909f7b4baca4c1L, DesignSystemSetTypeConcept);
    builder.put(0x6909f7b4b9b4a21L, DesignSystemStringTypeConcept);
    builder.put(0x6909f7b4b5e14f1L, DesignSystemSubsystemListConcept);
    builder.put(0x6909f7b4b95b7b1L, DesignSystemTypeConcept);
    builder.put(0x6909f7b4b689f05L, DirectReferenceDesignSystemParentConcept);
    builder.put(0x6909f7b4b98a801L, IDesignSystemCreatesType);
    builder.put(0x6909f7b4b81ef0aL, IndirectReferenceDesignSystemParentConcept);
    builder.put(0x6909f7b4b95edf3L, ParametizedDesignSystemPropertyConcept);
    builder.put(0x6909f7b4b864160L, ReferenceDesignSystemParentConcept);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
