package DesignSystem.App.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class PrimitiveTokens_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public PrimitiveTokens_SubtypingRule() {
  }
  public SNode getSubOrSuperType(SNode tokens, TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    SNode type = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x43e160c7168c4805L, 0x904bc45c336610e7L, 0x6909f7b4b98a806L, "DesignSystem.System.structure.DesignSystemReferenceTypeConcept"));
    SLinkOperations.setTarget(type, LINKS.reference$DKYX, SLinkOperations.getTarget(tokens, LINKS.parent$KX4d));
    return type;
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.DesignSystemPrimitiveTokensConcept$P$;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean isWeak() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink reference$DKYX = MetaAdapterFactory.getReferenceLink(0x43e160c7168c4805L, 0x904bc45c336610e7L, 0x6909f7b4b98a806L, 0x6909f7b4b98a807L, "reference");
    /*package*/ static final SContainmentLink parent$KX4d = MetaAdapterFactory.getContainmentLink(0x9b844d5fd3bc48e3L, 0x8d2ed303cf551efeL, 0x6909f7b4b5e14ecL, 0x6909f7b4c0af979L, "parent");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept DesignSystemPrimitiveTokensConcept$P$ = MetaAdapterFactory.getConcept(0x9b844d5fd3bc48e3L, 0x8d2ed303cf551efeL, 0x6909f7b4b5e14ecL, "DesignSystem.App.structure.DesignSystemPrimitiveTokensConcept");
  }
}
