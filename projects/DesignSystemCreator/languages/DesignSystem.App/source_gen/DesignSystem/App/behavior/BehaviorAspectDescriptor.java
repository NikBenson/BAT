package DesignSystem.App.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myDesignSystemPrimitiveTokensConcept__BehaviorDescriptor = new DesignSystemPrimitiveTokensConcept__BehaviorDescriptor();
  private final BHDescriptor myAbstractDesignSystemPrimitiveTokensConcept__BehaviorDescriptor = new AbstractDesignSystemPrimitiveTokensConcept__BehaviorDescriptor();
  private final BHDescriptor myIValueExpresssionConstraints__BehaviorDescriptor = new IValueExpresssionConstraints__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAbstractDesignSystemPrimitiveTokensConcept__BehaviorDescriptor;
      case 1:
        return myDesignSystemPrimitiveTokensConcept__BehaviorDescriptor;
      case 2:
        return myIValueExpresssionConstraints__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9b844d5fd3bc48e3L, 0x8d2ed303cf551efeL, 0x6909f7b4c064ef7L), MetaIdFactory.conceptId(0x9b844d5fd3bc48e3L, 0x8d2ed303cf551efeL, 0x6909f7b4b5e14ecL), MetaIdFactory.conceptId(0x9b844d5fd3bc48e3L, 0x8d2ed303cf551efeL, 0x6909f7b4c2bf718L)).seal();
}
